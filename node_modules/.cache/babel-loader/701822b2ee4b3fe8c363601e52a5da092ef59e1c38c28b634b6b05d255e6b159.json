{"ast":null,"code":"var _jsxFileName = \"/Users/ohayou/Documents/\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF/weboko/src/component/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [createtext, setCreatetext] = useState(0);\n  const [textlist, setTextlist] = useState([]);\n  const [htmltext, setHtmlext] = useState('');\n  const countUp = () => {\n    const updatedText = createtext + 1;\n    setCreatetext(updatedText);\n    setTextlist(prevList => [...prevList, updatedText]);\n  };\n  const countDown = () => {\n    if (createtext >= 1) {\n      setCreatetext(prevState => prevState - 1);\n      setTextlist(prevList => prevList.slice(0, -1));\n    }\n  };\n  const textValue = event => {\n    setHtmlext(event.target.value);\n    console.log(htmltext);\n  };\n  let textcount = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: createtext\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 20\n  }, this);\n  /* useEffect(()=>{ \n       textlist.push(1)  \n   },[createtext])*/\n  console.log(textlist);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"App-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), textcount, textlist.map(() => {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => textValue(event),\n        type: 'text',\n        value: htmltext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: htmltext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"2T+sdJHSd8uqC1REq+FmpZkWd3U=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Body","_s","createtext","setCreatetext","textlist","setTextlist","htmltext","setHtmlext","countUp","updatedText","prevList","countDown","prevState","slice","textValue","event","target","value","console","log","textcount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","onChange","type","_c","$RefreshReg$"],"sources":["/Users/ohayou/Documents/ネットワーク/weboko/src/component/body.jsx"],"sourcesContent":["import React,{ useState,useEffect } from 'react';\n\nconst Body=()=>{\n\n\n    const [createtext,setCreatetext]=useState(0)\n    const [textlist,setTextlist]=useState([])\n    const [htmltext,setHtmlext]=useState('')\n\n    const countUp=()=>{\n        const updatedText = createtext + 1;\n        setCreatetext(updatedText)\n        setTextlist(prevList=>[...prevList,updatedText])\n    }\n\n    const countDown=()=>{\n        if(createtext>=1){\n        setCreatetext(prevState => prevState-1)\n        setTextlist(prevList=>prevList.slice(0,-1))\n        }\n    }\n\n    const textValue=(event)=>{\n        setHtmlext(event.target.value)\n        console.log(htmltext)\n    }\n\n    let textcount=(<div>{createtext}</div>);\n   /* useEffect(()=>{ \n        textlist.push(1)  \n    },[createtext])*/\n    console.log(textlist);\n    return(\n        <body className=\"App-body\">\n            <button onClick={countUp}>Up</button>\n            <button onClick={countDown}>down</button>\n            {textcount}\n            {textlist.map(()=>{\n                return(\n                    <input \n                        onChange={(event)=>textValue(event)}\n                        type={'text'}\n                        value={htmltext}\n                    />\n                )\n            })}\n            <div>{htmltext}</div>\n        </body>\n    );\n}\nexport default Body;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAACA,CAAA,KAAI;EAAAC,EAAA;EAGX,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACP,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAACC,WAAW,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACU,QAAQ,EAACC,UAAU,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,OAAO,GAACA,CAAA,KAAI;IACd,MAAMC,WAAW,GAAGP,UAAU,GAAG,CAAC;IAClCC,aAAa,CAACM,WAAW,CAAC;IAC1BJ,WAAW,CAACK,QAAQ,IAAE,CAAC,GAAGA,QAAQ,EAACD,WAAW,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,SAAS,GAACA,CAAA,KAAI;IAChB,IAAGT,UAAU,IAAE,CAAC,EAAC;MACjBC,aAAa,CAACS,SAAS,IAAIA,SAAS,GAAC,CAAC,CAAC;MACvCP,WAAW,CAACK,QAAQ,IAAEA,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMC,SAAS,GAAEC,KAAK,IAAG;IACrBR,UAAU,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EACzB,CAAC;EAED,IAAIc,SAAS,gBAAErB,OAAA;IAAAsB,QAAA,EAAMnB;EAAU;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAE;EACxC;AACH;AACA;EACIP,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;EACrB,oBACIL,OAAA;IAAM2B,SAAS,EAAC,UAAU;IAAAL,QAAA,gBACtBtB,OAAA;MAAQ4B,OAAO,EAAEnB,OAAQ;MAAAa,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrC1B,OAAA;MAAQ4B,OAAO,EAAEhB,SAAU;MAAAU,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxCL,SAAS,EACThB,QAAQ,CAACwB,GAAG,CAAC,MAAI;MACd,oBACI7B,OAAA;QACI8B,QAAQ,EAAGd,KAAK,IAAGD,SAAS,CAACC,KAAK,CAAE;QACpCe,IAAI,EAAE,MAAO;QACbb,KAAK,EAAEX;MAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAEV,CAAC,CAAC,eACF1B,OAAA;MAAAsB,QAAA,EAAMf;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEf,CAAC;AAAAxB,EAAA,CA/CKD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}