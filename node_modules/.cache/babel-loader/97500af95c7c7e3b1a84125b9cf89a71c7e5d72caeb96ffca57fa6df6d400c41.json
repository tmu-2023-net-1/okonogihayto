{"ast":null,"code":"var _jsxFileName = \"/Users/ohayou/Documents/\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF/okonogihayto/src/component/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [createtext, setCreatetext] = useState(0);\n  const [textlist, setTextlist] = useState([]);\n  const [rotation, setRotation] = useState(0);\n  /*  const [fontSize,setFontSize]=useState(3);\n    const fontfamily=['serif','sans-serif','cursive'];\n    const [selectedfont,setSelectedfont]=useState('sans-serif');\n    const [fontColor,setFontColor]=useState('rgba(0,0,0,1)');\n  */\n  const [rotationList, setRotationList] = useState([]);\n  const elm = useRef(null);\n  const bodyRef = useRef();\n  const countUp = () => {\n    const updatedText = createtext + 1;\n    setCreatetext(updatedText);\n    setTextlist(prevList => [...prevList, '']);\n    setRotationList(prevList => [...prevList, Number]);\n  };\n  const countDown = () => {\n    if (createtext >= 1) {\n      setCreatetext(prevState => prevState - 1);\n      setTextlist(prevList => prevList.slice(0, -1));\n    }\n  };\n  const textValue = (event, index) => {\n    const updatedList = [...textlist];\n    updatedList[index] = event.target.value;\n    setTextlist(updatedList);\n  };\n  console.log(textlist);\n  console.log(rotationList);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textrey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countUp,\n          children: \"\\u6587\\u5B57\\u751F\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countDown,\n          children: \"\\u524A\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-item\",\n        children: textlist.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-item\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"textlist\",\n                onChange: event => textValue(event, index),\n                type: \"text\",\n                value: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n              text: text,\n              bodyRef: bodyRef,\n              textlist: textlist.length,\n              elm: elm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bodyRef,\n        className: \"canvas\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'absolute',\n            top: '-40px'\n          },\n          children: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), textlist.map((text, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: rotationList[index] = rotation\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"h3tlEzhQOPtwecJd3g6PacS/7Us=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useRef","useEffect","BodyText","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","createtext","setCreatetext","textlist","setTextlist","rotation","setRotation","rotationList","setRotationList","elm","bodyRef","countUp","updatedText","prevList","Number","countDown","prevState","slice","textValue","event","index","updatedList","target","value","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onChange","type","length","ref","style","position","top","_c","$RefreshReg$"],"sources":["/Users/ohayou/Documents/ネットワーク/okonogihayto/src/component/body.jsx"],"sourcesContent":["import React,{ useState,useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport {motion} from 'framer-motion';\n\n\nconst Body=()=>{\n\n    const [createtext,setCreatetext]=useState(0)\n    const [textlist,setTextlist]=useState([])\n\n    const [rotation,setRotation]=useState(0);\n  /*  const [fontSize,setFontSize]=useState(3);\n    const fontfamily=['serif','sans-serif','cursive'];\n    const [selectedfont,setSelectedfont]=useState('sans-serif');\n    const [fontColor,setFontColor]=useState('rgba(0,0,0,1)');\n*/\n    const [rotationList, setRotationList] = useState([]);\n  \n    \n\n    const elm = useRef(null);\n    const bodyRef = useRef();\n    \n    const countUp=()=>{\n        const updatedText = createtext + 1;\n        setCreatetext(updatedText)\n        setTextlist(prevList=>[...prevList,''])\n        setRotationList(prevList=>[...prevList,Number])\n    }\n\n    const countDown=()=>{\n        if(createtext>=1){\n            setCreatetext(prevState => prevState-1)\n            setTextlist(prevList=>prevList.slice(0,-1))\n        }\n    }\n\n    const textValue=(event,index)=>{\n        const updatedList = [...textlist];\n        updatedList[index] = event.target.value;\n        setTextlist(updatedList);\n    }\n    console.log(textlist)\n   console.log(rotationList)\n    return(\n        \n        <main className=\"App-body\" >\n            \n            <div className='textrey'>\n                <div className='textparent'>  \n                    <button className='genebtn' onClick={countUp}>文字生成</button>\n                    <button className='genebtn' onClick={countDown}>削除</button>\n                </div>\n\n                <div className='body-item'>\n                    {textlist.map((text,index)=>{\n                        return(\n                            <>\n                            \n                                <div className='text-item' key={index}>\n                                    \n                                            <input className='textlist'\n                                                onChange={(event)=>textValue(event,index)}\n                                                type='text'\n                                                value={text}\n                                            />           \n                                </div>\n                                <BodyText \n                                    text={text}\n                                    bodyRef={bodyRef}\n                                    textlist={textlist.length}\n                                    elm={elm}\n                                    />\n                                \n                             \n                        </>\n                        )\n                    })}\n                    \n                </div>\n               \n                <div  ref={bodyRef} className='canvas'><p style={{position:'absolute',top:'-40px'}}>canvas</p></div>\n               \n            </div>\n\n            {textlist.map((text,index)=>{\n                        return(\n                            <>\n                            {rotationList[index]=rotation}\n                            </>\n                            )\n                        })}\n           \n        </main>\n    );\n}\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}