{"ast":null,"code":"var _jsxFileName = \"/Users/ohayou/Documents/\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF/okonogihayto/src/component/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [createtext, setCreatetext] = useState(0);\n  const [textlist, setTextlist] = useState([]);\n  const [canvassize, setCanvassize] = useState(3);\n  let canvaswidth = 100 - canvassize * 1.3;\n  let canvasheight = 100 - canvassize * 1.3;\n  let canvasleft = 50 + canvassize * 1.3 / 2;\n  let canvastop = 50 + canvassize * 1.3 / 2;\n  const elm = useRef(null);\n  const bodyRef = useRef(null);\n  const countUp = () => {\n    const updatedText = createtext + 1;\n    setCreatetext(updatedText);\n    setTextlist(prevList => [...prevList, '']);\n  };\n  const countDown = () => {\n    if (createtext >= 1) {\n      setCreatetext(prevState => prevState - 1);\n      setTextlist(prevList => prevList.slice(0, -1));\n    }\n  };\n  const textValue = (event, index) => {\n    const updatedList = [...textlist];\n    updatedList[index] = event.target.value;\n    setTextlist(updatedList);\n  };\n  const sizeValue = size => {\n    setCanvassize(size);\n  };\n\n  /* const calConst=()=>{\n       if (elm.current && bodyRef.current) {\n       const elmRect=elm.current.getBoundingClientRect();\n       const bodyRect=bodyRef.current.getBoundingClientRect();\n       const top = -elmRect.top+bodyRect.top;\n       const right =bodyRect.right-elmRect.right;\n       const bottom =bodyRect.bottom-elmRect.bottom;\n       const left = -elmRect.left+bodyRect.left;\n       return{top, right, bottom, left };\n       }\n   }*/\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textrey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countUp,\n          children: \"\\u6587\\u5B57\\u751F\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countDown,\n          children: \"\\u524A\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-item\",\n        children: textlist.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-item\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"textlist\",\n                onChange: event => textValue(event, index),\n                type: \"text\",\n                value: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n              text: text,\n              bodyRef: bodyRef,\n              textlist: textlist.length,\n              canvas: sizeValue,\n              elm: elm\n              //calConst={calConst()}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'absolute',\n            top: '-40px'\n          },\n          children: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-layer\",\n          ref: bodyRef,\n          style: {\n            width: `${canvaswidth}%`,\n            height: `${canvasheight}%`,\n            left: `${canvasleft}%`,\n            top: `${canvastop}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"YT7K1XBzWia6Hvs5SbVFZ6PRCbM=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useRef","useEffect","BodyText","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","createtext","setCreatetext","textlist","setTextlist","canvassize","setCanvassize","canvaswidth","canvasheight","canvasleft","canvastop","elm","bodyRef","countUp","updatedText","prevList","countDown","prevState","slice","textValue","event","index","updatedList","target","value","sizeValue","size","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onChange","type","length","canvas","style","position","top","ref","width","height","left","_c","$RefreshReg$"],"sources":["/Users/ohayou/Documents/ネットワーク/okonogihayto/src/component/body.jsx"],"sourcesContent":["import React,{ useState,useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\n\n\nconst Body=()=>{\n\n    const [createtext,setCreatetext]=useState(0)\n    const [textlist,setTextlist]=useState([])\n    const [canvassize,setCanvassize]=useState(3);\n    let canvaswidth=100-(canvassize*1.3);\n    let canvasheight=100-(canvassize*1.3);\n    let canvasleft=50+(canvassize*1.3)/2;\n    let canvastop=50+(canvassize*1.3)/2;\n    const elm = useRef(null);\n    const bodyRef = useRef(null);\n    \n    const countUp=()=>{\n        const updatedText = createtext + 1;\n        setCreatetext(updatedText)\n        setTextlist(prevList=>[...prevList,''])\n    }\n\n    const countDown=()=>{\n        if(createtext>=1){\n            setCreatetext(prevState => prevState-1)\n            setTextlist(prevList=>prevList.slice(0,-1))\n        }\n    }\n\n    const textValue=(event,index)=>{\n        const updatedList = [...textlist];\n        updatedList[index] = event.target.value;\n        setTextlist(updatedList);\n    }\n    \n    const sizeValue=(size)=>{\n        setCanvassize(size)\n    }\n\n   /* const calConst=()=>{\n        if (elm.current && bodyRef.current) {\n        const elmRect=elm.current.getBoundingClientRect();\n        const bodyRect=bodyRef.current.getBoundingClientRect();\n        const top = -elmRect.top+bodyRect.top;\n        const right =bodyRect.right-elmRect.right;\n        const bottom =bodyRect.bottom-elmRect.bottom;\n        const left = -elmRect.left+bodyRect.left;\n        return{top, right, bottom, left };\n        }\n    }*/\n\n    \n    return(\n        \n        <main className=\"App-body\" >\n            \n            <div className='textrey'>\n                <div className='textparent'>  \n                    <button className='genebtn' onClick={countUp}>文字生成</button>\n                    <button className='genebtn' onClick={countDown}>削除</button>\n                </div>\n\n                <div className='body-item'>\n                    {textlist.map((text,index)=>{\n                        return(\n                            <>\n                                <div className='text-item' key={index}>\n                                    <input className='textlist'\n                                        onChange={(event)=>textValue(event,index)}\n                                        type='text'\n                                        value={text}\n                                    />\n                                </div>\n                                \n                                <BodyText \n                                    text={text}\n                                    bodyRef={bodyRef}\n                                    textlist={textlist.length}\n                                    canvas={sizeValue}\n                                    elm={elm}\n                                    //calConst={calConst()}\n                                    \n                                    \n                                />\n                        </>\n                        )\n                    })}\n                    \n                </div>\n                \n                <div  className='canvas'><p style={{position:'absolute',top:'-40px'}}>canvas</p>\n                <div className='body-layer'\n                        ref={bodyRef}\n                        style={{\n                            width:`${canvaswidth}%`,\n                            height:`${canvasheight}%`,\n                            left:`${canvasleft}%`,\n                            top:`${canvastop}%`\n                            }} \n                        ></div>\n                </div>\n               \n               \n            </div>\n           \n        </main>\n    );\n}\nexport default Body;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACxD,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGnC,MAAMC,IAAI,GAACA,CAAA,KAAI;EAAAC,EAAA;EAEX,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACX,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAACC,WAAW,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACc,UAAU,EAACC,aAAa,CAAC,GAACf,QAAQ,CAAC,CAAC,CAAC;EAC5C,IAAIgB,WAAW,GAAC,GAAG,GAAEF,UAAU,GAAC,GAAI;EACpC,IAAIG,YAAY,GAAC,GAAG,GAAEH,UAAU,GAAC,GAAI;EACrC,IAAII,UAAU,GAAC,EAAE,GAAEJ,UAAU,GAAC,GAAG,GAAE,CAAC;EACpC,IAAIK,SAAS,GAAC,EAAE,GAAEL,UAAU,GAAC,GAAG,GAAE,CAAC;EACnC,MAAMM,GAAG,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMoB,OAAO,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMqB,OAAO,GAACA,CAAA,KAAI;IACd,MAAMC,WAAW,GAAGb,UAAU,GAAG,CAAC;IAClCC,aAAa,CAACY,WAAW,CAAC;IAC1BV,WAAW,CAACW,QAAQ,IAAE,CAAC,GAAGA,QAAQ,EAAC,EAAE,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,SAAS,GAACA,CAAA,KAAI;IAChB,IAAGf,UAAU,IAAE,CAAC,EAAC;MACbC,aAAa,CAACe,SAAS,IAAIA,SAAS,GAAC,CAAC,CAAC;MACvCb,WAAW,CAACW,QAAQ,IAAEA,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,MAAMC,SAAS,GAACA,CAACC,KAAK,EAACC,KAAK,KAAG;IAC3B,MAAMC,WAAW,GAAG,CAAC,GAAGnB,QAAQ,CAAC;IACjCmB,WAAW,CAACD,KAAK,CAAC,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK;IACvCpB,WAAW,CAACkB,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMG,SAAS,GAAEC,IAAI,IAAG;IACpBpB,aAAa,CAACoB,IAAI,CAAC;EACvB,CAAC;;EAEF;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,oBAEI9B,OAAA;IAAM+B,SAAS,EAAC,UAAU;IAAAC,QAAA,eAEtBhC,OAAA;MAAK+B,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBhC,OAAA;QAAK+B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBhC,OAAA;UAAQ+B,SAAS,EAAC,SAAS;UAACE,OAAO,EAAEhB,OAAQ;UAAAe,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DrC,OAAA;UAAQ+B,SAAS,EAAC,SAAS;UAACE,OAAO,EAAEb,SAAU;UAAAY,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eAENrC,OAAA;QAAK+B,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrBzB,QAAQ,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAACd,KAAK,KAAG;UACxB,oBACIzB,OAAA,CAAAE,SAAA;YAAA8B,QAAA,gBACIhC,OAAA;cAAK+B,SAAS,EAAC,WAAW;cAAAC,QAAA,eACtBhC,OAAA;gBAAO+B,SAAS,EAAC,UAAU;gBACvBS,QAAQ,EAAGhB,KAAK,IAAGD,SAAS,CAACC,KAAK,EAACC,KAAK,CAAE;gBAC1CgB,IAAI,EAAC,MAAM;gBACXb,KAAK,EAAEW;cAAK;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf;YAAC,GAL0BZ,KAAK;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMhC,CAAC,eAENrC,OAAA,CAACF,QAAQ;cACLyC,IAAI,EAAEA,IAAK;cACXvB,OAAO,EAAEA,OAAQ;cACjBT,QAAQ,EAAEA,QAAQ,CAACmC,MAAO;cAC1BC,MAAM,EAAEd,SAAU;cAClBd,GAAG,EAAEA;cACL;YAAA;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGH,CAAC;UAAA,eACR,CAAC;QAEP,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC,eAENrC,OAAA;QAAM+B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBAAChC,OAAA;UAAG4C,KAAK,EAAE;YAACC,QAAQ,EAAC,UAAU;YAACC,GAAG,EAAC;UAAO,CAAE;UAAAd,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChFrC,OAAA;UAAK+B,SAAS,EAAC,YAAY;UACnBgB,GAAG,EAAE/B,OAAQ;UACb4B,KAAK,EAAE;YACHI,KAAK,EAAE,GAAErC,WAAY,GAAE;YACvBsC,MAAM,EAAE,GAAErC,YAAa,GAAE;YACzBsC,IAAI,EAAE,GAAErC,UAAW,GAAE;YACrBiC,GAAG,EAAE,GAAEhC,SAAU;UACjB;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEf,CAAC;AAAAjC,EAAA,CAvGKD,IAAI;AAAAgD,EAAA,GAAJhD,IAAI;AAwGV,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}