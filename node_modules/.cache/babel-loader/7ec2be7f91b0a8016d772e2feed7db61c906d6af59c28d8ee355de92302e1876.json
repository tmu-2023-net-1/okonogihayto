{"ast":null,"code":"var _jsxFileName = \"/Users/ohayou/Documents/\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF/weboko/src/component/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport BodyText from './boby-text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [createtext, setCreatetext] = useState(0);\n  const [textlist, setTextlist] = useState([]);\n  const bodyRef = useRef();\n  const countUp = () => {\n    const updatedText = createtext + 1;\n    setCreatetext(updatedText);\n    setTextlist(prevList => [...prevList, '']);\n  };\n  const countDown = () => {\n    if (createtext >= 1) {\n      setCreatetext(prevState => prevState - 1);\n      setTextlist(prevList => prevList.slice(0, -1));\n    }\n  };\n  const textValue = (event, index) => {\n    const updatedList = [...textlist];\n    updatedList[index] = event.target.value;\n    setTextlist(updatedList);\n  };\n  let textcount = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: createtext\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 20\n  }, this);\n  console.log(textlist);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App-body\",\n    ref: bodyRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textparent\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"genebtn\",\n        onClick: countUp,\n        children: \"\\u6587\\u5B57\\u751F\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"genebtn\",\n        onClick: countDown,\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), textlist.map((text, index) => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textlist\",\n          onChange: event => textValue(event, index),\n          type: \"text\",\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), textlist.map((text, index) => {\n      return /*#__PURE__*/_jsxDEV(BodyText, {\n        text: text,\n        bodyRef: bodyRef,\n        textlist: textlist.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"HqVE0StNjV70YqC9XJ5GuqDUZ0E=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useRef","BodyText","jsxDEV","_jsxDEV","Body","_s","createtext","setCreatetext","textlist","setTextlist","bodyRef","countUp","updatedText","prevList","countDown","prevState","slice","textValue","event","index","updatedList","target","value","textcount","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","ref","onClick","map","text","onChange","type","length","_c","$RefreshReg$"],"sources":["/Users/ohayou/Documents/ネットワーク/weboko/src/component/body.jsx"],"sourcesContent":["import React,{ useState,useRef } from 'react';\nimport BodyText from './boby-text';\n\nconst Body=()=>{\n\n    const [createtext,setCreatetext]=useState(0)\n    const [textlist,setTextlist]=useState([])\n    const bodyRef = useRef();\n\n    const countUp=()=>{\n        const updatedText = createtext + 1;\n        setCreatetext(updatedText)\n        setTextlist(prevList=>[...prevList,''])\n    }\n\n    const countDown=()=>{\n        if(createtext>=1){\n            setCreatetext(prevState => prevState-1)\n            setTextlist(prevList=>prevList.slice(0,-1))\n        }\n    }\n\n    const textValue=(event,index)=>{\n        const updatedList = [...textlist];\n        updatedList[index] = event.target.value;\n        setTextlist(updatedList);\n    }\n\n    let textcount=(<div>{createtext}</div>);\n    console.log(textlist);\n\n    return(\n        <main className=\"App-body\" ref={bodyRef}>\n            <div className='textparent'>\n                \n                <button className='genebtn' onClick={countUp}>文字生成</button>\n                <button className='genebtn' onClick={countDown}>削除</button>\n                \n               \n                {textlist.map((text,index)=>{\n                    return(\n                        \n                        <input className='textlist'\n                            onChange={(event)=>textValue(event,index)}\n                            type='text'\n                            value={text}\n                        />\n                     \n                    )\n                })}\n                 \n             </div>\n                {textlist.map((text, index) => {\n                    return (\n                            <BodyText \n                            text={text}\n                            bodyRef={bodyRef}\n                            textlist={textlist.length}\n                            />\n                            )\n                })}\n             <div className='canvas'></div>\n            \n        </main>\n    );\n}\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}