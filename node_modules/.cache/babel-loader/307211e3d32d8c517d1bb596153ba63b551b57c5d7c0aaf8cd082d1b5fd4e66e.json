{"ast":null,"code":"var _jsxFileName = \"/Users/ohayou/Documents/\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF/okonogihayto/src/component/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [createtext, setCreatetext] = useState(0);\n  const [textlist, setTextlist] = useState([]);\n  const [rotation, setRotation] = useState(100);\n  const [fontSize, setFontSize] = useState(3);\n  const fontfamily = ['serif', 'sans-serif', 'cursive'];\n  const [selectedfont, setSelectedfont] = useState('sans-serif');\n  const [fontColor, setFontColor] = useState('rgba(0,0,0,1)');\n  const [rotationList, setRotationList] = useState([]);\n  const elm = useRef(null);\n  const bodyRef = useRef();\n  const countUp = () => {\n    const updatedText = createtext + 1;\n    setCreatetext(updatedText);\n    setTextlist(prevList => [...prevList, '']);\n  };\n  const countDown = () => {\n    if (createtext >= 1) {\n      setCreatetext(prevState => prevState - 1);\n      setTextlist(prevList => prevList.slice(0, -1));\n    }\n  };\n  const textValue = (event, index) => {\n    const updatedList = [...textlist];\n    updatedList[index] = event.target.value;\n    setTextlist(updatedList);\n  };\n  const rotationValue = (event, index) => {\n    const value = parseFloat(event.target.value);\n    if (!isNaN(value)) {\n      const updatedList = [...rotationList];\n      updatedList[index] = value;\n      setRotationList(updatedList);\n    } else {\n      const updatedList = [...rotationList];\n      updatedList[index] = 0;\n      setRotationList(updatedList);\n    }\n  };\n  console.log(rotationList);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textrey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countUp,\n          children: \"\\u6587\\u5B57\\u751F\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countDown,\n          children: \"\\u524A\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-item\",\n        children: textlist.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-item\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"textlist\",\n                onChange: event => textValue(event, index),\n                type: \"text\",\n                value: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n              text: text,\n              bodyRef: bodyRef,\n              textlist: textlist.length,\n              elm: elm,\n              rotationvalue: rotationValue,\n              rotation: rotationList[index],\n              setRotation: setRotation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bodyRef,\n        className: \"canvas\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'absolute',\n            top: '-40px'\n          },\n          children: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), textlist.map((text, index) => {\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"text-move\",\n          ref: elm,\n          animate: {\n            rotate: rotationList[index],\n            scale: fontSize,\n            fontFamily: selectedfont,\n            color: fontColor\n          },\n          drag: true,\n          dragMomentum: false,\n          dragConstraints: bodyRef,\n          whileHover: {\n            scale: 1.2,\n            transition: {\n              duration: 0.5\n            }\n          },\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"cj86SeVK1VceOvMh0NgBc02VRC8=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useRef","useEffect","BodyText","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","createtext","setCreatetext","textlist","setTextlist","rotation","setRotation","fontSize","setFontSize","fontfamily","selectedfont","setSelectedfont","fontColor","setFontColor","rotationList","setRotationList","elm","bodyRef","countUp","updatedText","prevList","countDown","prevState","slice","textValue","event","index","updatedList","target","value","rotationValue","parseFloat","isNaN","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onChange","type","length","rotationvalue","ref","style","position","top","div","animate","rotate","scale","fontFamily","color","drag","dragMomentum","dragConstraints","whileHover","transition","duration","_c","$RefreshReg$"],"sources":["/Users/ohayou/Documents/ネットワーク/okonogihayto/src/component/body.jsx"],"sourcesContent":["import React,{ useState,useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport {motion} from 'framer-motion';\n\n\nconst Body=()=>{\n\n    const [createtext,setCreatetext]=useState(0)\n    const [textlist,setTextlist]=useState([])\n\n    const [rotation,setRotation]=useState(100);\n    const [fontSize,setFontSize]=useState(3);\n    const fontfamily=['serif','sans-serif','cursive'];\n    const [selectedfont,setSelectedfont]=useState('sans-serif');\n    const [fontColor,setFontColor]=useState('rgba(0,0,0,1)');\n\n    const [rotationList, setRotationList] = useState([]);\n  \n    \n\n    const elm = useRef(null);\n    const bodyRef = useRef();\n    \n    const countUp=()=>{\n        const updatedText = createtext + 1;\n        setCreatetext(updatedText)\n        setTextlist(prevList=>[...prevList,''])\n    }\n\n    const countDown=()=>{\n        if(createtext>=1){\n            setCreatetext(prevState => prevState-1)\n            setTextlist(prevList=>prevList.slice(0,-1))\n        }\n    }\n\n    const textValue=(event,index)=>{\n        const updatedList = [...textlist];\n        updatedList[index] = event.target.value;\n        setTextlist(updatedList);\n    }\n    \n    const rotationValue = (event, index) => {\n        const value = parseFloat(event.target.value);\n        if (!isNaN(value)) {\n          const updatedList = [...rotationList];\n          updatedList[index] = value;\n          setRotationList(updatedList);\n        } else {\n          const updatedList = [...rotationList];\n          updatedList[index] = 0;\n          setRotationList(updatedList);\n        }\n      };\n\n   console.log(rotationList)\n    return(\n        \n        <main className=\"App-body\" >\n            \n            <div className='textrey'>\n                <div className='textparent'>  \n                    <button className='genebtn' onClick={countUp}>文字生成</button>\n                    <button className='genebtn' onClick={countDown}>削除</button>\n                </div>\n\n                <div className='body-item'>\n                    {textlist.map((text,index)=>{\n                        return(\n                            <>\n                            \n                                <div className='text-item' key={index}>\n                                    \n                                            <input className='textlist'\n                                                onChange={(event)=>textValue(event,index)}\n                                                type='text'\n                                                value={text}\n                                            />           \n                                </div>\n                                <BodyText \n                                    text={text}\n                                    bodyRef={bodyRef}\n                                    textlist={textlist.length}\n                                    elm={elm}\n                                    rotationvalue={rotationValue}\n                                    rotation={rotationList[index]}\n                                    setRotation={setRotation}\n                                    />\n                                \n                             \n                        </>\n                        )\n                    })}\n                    \n                </div>\n               \n                <div  ref={bodyRef} className='canvas'><p style={{position:'absolute',top:'-40px'}}>canvas</p>\n              \n            </div>\n                {textlist.map((text,index)=>{\n                        return(\n                                <motion.div className='text-move'\n                                ref={elm}\n                                    animate={{\n                                    rotate:rotationList[index],\n                                    scale:fontSize,\n                                    fontFamily:selectedfont,\n                                    color:fontColor \n                                        }}\n                                    drag\n                                    \n                                    dragMomentum={false}\n                                    dragConstraints={bodyRef}\n                                    whileHover={{\n                                        scale:1.2,\n                                        transition:{duration:0.5},\n                                \n                                    }}>\n                                    {text}\n                                </motion.div>\n                   )\n                })}\n            </div>\n\n           \n        </main>\n    );\n}\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}