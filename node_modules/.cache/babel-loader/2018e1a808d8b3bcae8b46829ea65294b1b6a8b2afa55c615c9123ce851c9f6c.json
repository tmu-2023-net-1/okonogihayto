{"ast":null,"code":"var _jsxFileName = \"/Users/ohayou/Documents/\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF/okonogihayto/src/component/body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [createtext, setCreatetext] = useState(0);\n  const [textlist, setTextlist] = useState([]);\n\n  // const [rotation,setRotation]=useState(Number);\n  /*  const [fontSize,setFontSize]=useState(3);\n    const fontfamily=['serif','sans-serif','cursive'];\n    const [selectedfont,setSelectedfont]=useState('sans-serif');\n    const [fontColor,setFontColor]=useState('rgba(0,0,0,1)');\n  */\n  // const [rotationList, setRotationList] = useState(['']);\n\n  const elm = useRef(null);\n  const bodyRef = useRef();\n  const countUp = () => {\n    const updatedText = createtext + 1;\n    setCreatetext(updatedText);\n    setTextlist(prevList => [...prevList, '']);\n    // setRotationList(prevList=>[...prevList,''])\n  };\n\n  const countDown = () => {\n    if (createtext >= 1) {\n      setCreatetext(prevState => prevState - 1);\n      setTextlist(prevList => prevList.slice(0, -1));\n    }\n  };\n  const textValue = (event, index) => {\n    const updatedList = [...textlist];\n    updatedList[index] = event.target.value;\n    setTextlist(updatedList);\n  };\n  useEffect(() => {\n    bodyRef.current.getBoundingClientRect(); // 要素のサイズと位置を取得して再計算\n  });\n\n  console.log(bodyRef);\n  /* const rotationValue=(event)=>{\n       const value=Number(parseFloat(event.target.value));\n       if(!isNaN(value)){\n       setRotation(value)\n       }else {\n       setRotation(0)\n       }\n   }\n   console.log(textlist)\n  console.log(rotationList)\n  */\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    ref: bodyRef,\n    className: \"App-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textrey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countUp,\n          children: \"\\u6587\\u5B57\\u751F\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"genebtn\",\n          onClick: countDown,\n          children: \"\\u524A\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-item\",\n        children: textlist.map((text, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-item\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"textlist\",\n                onChange: event => textValue(event, index),\n                type: \"text\",\n                value: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n              text: text,\n              bodyRef: bodyRef,\n              textlist: textlist.length,\n              elm: elm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'absolute',\n            top: '-40px'\n          },\n          children: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"8f1OhMoubPu/UpQ0uHKh6VmFJ7s=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useRef","useEffect","BodyText","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","createtext","setCreatetext","textlist","setTextlist","elm","bodyRef","countUp","updatedText","prevList","countDown","prevState","slice","textValue","event","index","updatedList","target","value","current","getBoundingClientRect","console","log","ref","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","text","onChange","type","length","style","position","top","_c","$RefreshReg$"],"sources":["/Users/ohayou/Documents/ネットワーク/okonogihayto/src/component/body.jsx"],"sourcesContent":["import React,{ useState,useRef, useEffect } from 'react';\nimport BodyText from './boby-text';\nimport {motion} from 'framer-motion';\n\n\nconst Body=()=>{\n\n    const [createtext,setCreatetext]=useState(0)\n    const [textlist,setTextlist]=useState([])\n\n   // const [rotation,setRotation]=useState(Number);\n  /*  const [fontSize,setFontSize]=useState(3);\n    const fontfamily=['serif','sans-serif','cursive'];\n    const [selectedfont,setSelectedfont]=useState('sans-serif');\n    const [fontColor,setFontColor]=useState('rgba(0,0,0,1)');\n*/\n   // const [rotationList, setRotationList] = useState(['']);\n  \n    \n\n    const elm = useRef(null);\n    const bodyRef = useRef();\n    \n    const countUp=()=>{\n        const updatedText = createtext + 1;\n        setCreatetext(updatedText)\n        setTextlist(prevList=>[...prevList,''])\n       // setRotationList(prevList=>[...prevList,''])\n    }\n\n    const countDown=()=>{\n        if(createtext>=1){\n            setCreatetext(prevState => prevState-1)\n            setTextlist(prevList=>prevList.slice(0,-1))\n        }\n    }\n\n    const textValue=(event,index)=>{\n        const updatedList = [...textlist];\n        updatedList[index] = event.target.value;\n        setTextlist(updatedList);\n    }\n\n    useEffect(()=>{\n        \n          bodyRef.current.getBoundingClientRect(); // 要素のサイズと位置を取得して再計算\n          \n\n    })\n    console.log(bodyRef)\n   /* const rotationValue=(event)=>{\n        const value=Number(parseFloat(event.target.value));\n        if(!isNaN(value)){\n        setRotation(value)\n        }else {\n        setRotation(0)\n        }\n    }\n    console.log(textlist)\n   console.log(rotationList)\n   */\n    return(\n        \n        <main ref={bodyRef} className=\"App-body\" >\n            \n            <div className='textrey'>\n                <div className='textparent'>  \n                    <button className='genebtn' onClick={countUp}>文字生成</button>\n                    <button className='genebtn' onClick={countDown}>削除</button>\n                </div>\n\n                <div className='body-item'>\n                    {textlist.map((text,index)=>{\n                        return(\n                            <>\n                            \n                                <div className='text-item' key={index}>\n                                    \n                                            <input className='textlist'\n                                                onChange={(event)=>textValue(event,index)}\n                                                type='text'\n                                                value={text}\n                                            />           \n                                </div>\n                                <BodyText \n                                    text={text}\n                                    bodyRef={bodyRef}\n                                    textlist={textlist.length}\n                                    elm={elm}\n                                    \n                                    />\n                                \n                             \n                        </>\n                        )\n                    })}\n                    \n                </div>\n               \n                <div   className='canvas'><p style={{position:'absolute',top:'-40px'}}>canvas</p></div>\n               \n            </div>\n\n           \n           \n        </main>\n    );\n}\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}